#version 330 core
layout(location = 0) out vec4 fragColor;
layout(location = 1) out vec4 brightColor;
in vec3 fNormal;
in vec2 fTPos;
in vec3 wPos;
uniform sampler2D texture0;
uniform vec3 lightColor;
uniform vec3 lightPos;
uniform vec3 camPos;
void main(){
	float gamma = 2.2f;
	//环境光
	float ambient = 1.5f;
	vec3 amEffect = ambient*texture(texture0,fTPos).rgb;
	//镜面反射
	vec3 lightDir = normalize(lightPos - wPos);
	vec3 viewDir = normalize(camPos-wPos);
	vec3 halfWayDir = normalize(lightDir+viewDir);
	float spec = pow(max(dot(fNormal,halfWayDir),0.0),8);
	vec3 specEffect = spec*lightColor*texture(texture0,fTPos).rgb;
	fragColor = vec4((specEffect*2.5+amEffect)*vec3(1.0f/gamma),1.0f);
	float brightness = dot(fragColor.rgb,vec3(0.3f,0.7f,0.1f));
	brightColor=vec4(1.0f);
	//if(brightness>5.0f)
		//brightColor = vec4(fragColor.rgb,1.0f);
}
